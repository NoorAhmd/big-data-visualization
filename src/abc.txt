import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';
import { useEffect, useState } from 'react';
import { Pie } from 'react-chartjs-2';
import './Chartjs.scss'

const Chartjs = () => {
    const [chartData, setChartData] = useState<any>(undefined)

    const data = {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [
            {
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 8],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                ],
                borderWidth: 1,
            },
        ],
    };
    useEffect(() => {
        ChartJS.register(ArcElement, Tooltip, Legend);
    
        setChartData(data)
        console.log(chartData)
    }, [])
    
    useEffect(() => {
      console.log("lala")
    }, [chartData])
    

    const filterChart = () => {
        const filterData = chartData.datasets[0].data.filter((value:any) => value > 6)

        const filterBackgroundColors = [];
        const filterBorderColors = [];

        for (let i = 0; i < filterData.length; i++) {
            const result = chartData.datasets[0].data.indexOf(filterData[i])
            const backgroundResult = chartData.datasets[0].backgroundColor[result]
            const colorResult = chartData.datasets[0].borderColor[result]

            filterBackgroundColors.push(backgroundResult);
            filterBorderColors.push(colorResult);
        }

        chartData.datasets[0].data = filterData;
        chartData.datasets[0].backgroundColor = filterBackgroundColors;
        chartData.datasets[0].borderColor = filterBorderColors;
    }

    return (
        <div className='container'>
            <button onClick={filterChart}>FilterChart</button>
            <Pie className='chart' data={chartData} />
        </div>
    );
}

export default Chartjs